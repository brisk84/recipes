version: "3.7"

services:
  db:
    restart: always
    container_name: db
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sqlRec1pe58
      POSTGRES_DB: recipes
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis
    container_name: redis
    restart: always
    hostname: redis
    ports:
      - 6379:6379/tcp
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  minio:
    image: minio/minio
    container_name: minio
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: m1n1oFSo
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  recipes:
    restart: always
    container_name: recipes
    build:
      context: ./
      dockerfile: Dockerfile
    command: sh -c "/usr/local/bin/app"
    network_mode: host
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  pgdata:
  minio-storage:
