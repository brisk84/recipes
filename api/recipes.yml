openapi: 3.0.3

info:
  title: Recipe
  description: Recipe servise
  version: 1.0.0

servers:
  - url: "https://localhost:8000"

paths:

  "/api/user/c/signin":
    post:
      tags:
        - user
      summary: Sign in
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        200:
          description: OK
        403:
          description: Forbidden

  "/api/recipe/c/create":
    post:
      tags:
        - recipe
      summary: Create recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Recipe"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipeWithId"

  "/api/recipe/c/update":
    post:
      tags:
        - recipe
      summary: Update recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecipeWithId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipeWithId"

  "/api/recipe/c/vote":
    post:
      tags:
        - recipe
      summary: Vote for recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vote"
      responses:
        200:
          description: OK
        409:
          description: Duplicate record

  "/api/recipe/c/delete":
    post:
      tags:
        - recipe
      summary: Update recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Id"

  "/api/recipe/q/list":
    post:
      tags:
        - recipe
      summary: List recipes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipesForList"

  "/api/recipe/q/read":
    post:
      tags:
        - recipe
      summary: Read recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Recipe"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipes"

  "/api/recipe/q/find":
    post:
      tags:
        - recipe
      summary: Find recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Query"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipes"

components:
  schemas:

    Id:
      required:
        - id
      properties:
        id:
          type: string
          format: uuid

    User:
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string

    Step:
      required:
        - title
        - time
      properties:
        title:
          type: string
        time:
          type: integer

    Recipe:
      required:
        - title
        - description
        - ingredients
        - steps
        - total_time
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        ingredients:
          type: array
          items:
            type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'
        total_time:
          type: integer
        rating:
          type: number
          format: double

    RecipeWithId:
      allOf:
        - $ref: '#/components/schemas/Id'
        - $ref: '#/components/schemas/Recipe'

    Recipes:
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RecipeWithId'

    RecipeForList:
      required:
        - id
        - title
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string

    RecipesForList:
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RecipeForList'

    Query:
      type: object
      properties:
        ingredients:
          type: array
          items:
            type: string
        max_time:
          type: integer
        sort_by_time:
          type: string
          enum:
            - asc
            - desc
        min_rating:
          type: number
          format: double
        sort_by_rating:
          type: string
          enum:
            - asc
            - desc

    Vote:
      required:
        - recipe_id
        - mark
      properties:
        recipe_id:
          type: string
        mark:
          type: integer
